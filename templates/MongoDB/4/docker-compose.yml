version: '2'
services:
  mongo-cluster:
    restart: always
    environment:
      - MONGO_SERVICE_NAME=mongo-cluster
      - CATTLE_SCRIPT_DEBUG=${debug}
      - MONGO_INITDB_ROOT_USERNAME=${root_username}
      - MONGO_INITDB_ROOT_PASSWORD=${root_password}
    entrypoint: /opt/rancher/bin/entrypoint.sh
    command:
    - --replSet
    - "${replset_name}"
    - --bind_ip
    - "0.0.0.0"
#    - --keyFile
#    - "/opt/rancher/bin/key.cert"
    volumes:
       - ${mvolume}:/data/db
    image: mongo:4.0.9
    labels:
      io.rancher.scheduler.affinity:host_label: ${host_label}
      io.rancher.container.hostname_override: container_name
      io.rancher.sidekicks: mongo-base, mongo-datavolume
    volumes_from:
      - mongo-datavolume
      - mongo-base
    ports:
      - 27017:27017/tcp
  mongo-base:
    restart: always
    labels:
      io.rancher.scheduler.affinity:host_label: ${host_label}
      io.rancher.container.hostname_override: container_name
      io.rancher.container.start_once: true
    image: mrcox/mongo-base:1.0.35
    stdin_open: true
    entrypoint: /bin/true
  mongo-datavolume:
    labels:
      io.rancher.scheduler.affinity:host_label: ${host_label}
      io.rancher.container.hostname_override: container_name
      io.rancher.container.start_once: true
    volumes:
      - /data/db
    entrypoint: /bin/true
    image: busybox
